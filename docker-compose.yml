version: '3.7'

services:
  postgres:
    image: postgres
    container_name: postgresql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: P@55w0rd
    command: >
      postgres -c wal_level=logical -c max_wal_senders=5 -c max_replication_slots=5
    ports:
      - '5432:5432'
    networks:
      - empoweridnet
    volumes:
      - './scripts/db_init.sql:/docker-entrypoint-initdb.d/db_init.sql'
    restart: 
      on-failure

  sql-server:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: sql-server
    environment:
      SA_PASSWORD: 'Changeme@786'
      ACCEPT_EULA: 'Y'
    ports:
      - '1433:1433'
    networks:
      - empoweridnet
    restart: 
      on-failure


  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - empoweridnet
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: 
      on-failure

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    networks:
      - empoweridnet
    ports:
      - '29092:29092'
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

    restart: 
      on-failure
    depends_on:
      - zookeeper
  
  init-kafka:
    image: confluentinc/cp-kafka:7.0.1    
    entrypoint: [ '/bin/sh', '-c' ]
    networks:
      - empoweridnet
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092'
    command: |
      "
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic Orders --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic Payments --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic Shipments --replication-factor 1 --partitions 1
      "
    depends_on:
    - kafka

  kafka_topics_ui:
    image: provectuslabs/kafka-ui:latest
    hostname: kafka-ui
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092'
    networks:
      - empoweridnet
    restart: 
      on-failure
    depends_on:
      - kafka
      - zookeeper

  connect:
    image: debezium/connect
    container_name: connect
    ports:
      - '8083:8083'
    environment:
      BOOTSTRAP_SERVERS: 'kafka:9092'
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: CONNECT_CONFIGS
      OFFSET_STORAGE_TOPIC: CONNECT_OFFSETS
      STATUS_STORAGE_TOPIC: CONNECT_STATUSES    
    networks:
      - empoweridnet
    restart: 
      on-failure
    depends_on:
      - postgres
      - kafka

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin_container
    environment:
      PGADMIN_DEFAULT_EMAIL: '${PGADMIN_DEFAULT_EMAIL:-pgadmintest@pgadmin.org}'
      PGADMIN_DEFAULT_PASSWORD: '${PGADMIN_DEFAULT_PASSWORD:-@dm1n}'
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - 'pgadmin:/var/lib/pgadmin'
    ports:
      - '$PGADMIN_PORT:80'
    networks:
      - empoweridnet
    restart: 
      on-failure
    depends_on:
      - postgres    
 
  empowerid-identityserver:
    image: empowerid-identityserver
    container_name: empowerid-identityserver
    build:
      context: .
      dockerfile: src/Identity/EmpowerID.IdentityServer/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: '${ASPNETCORE_ENVIRONMENT:-Development}'
      ASPNETCORE_URLS: 'http://+:80'    
    ports:
      - '5001:80'
    networks:
      - empoweridnet
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://EmpowerID-identityserver:80/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: 
      on-failure

  empowerid-apigateway:
    image: empowerid-apigateway
    container_name: empowerid-apigateway
    build:
      context: .
      dockerfile: src/Gateway/EmpowerID.ApiGateway/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: '${ASPNETCORE_ENVIRONMENT:-Development}'
      ASPNETCORE_URLS: 'http://+:80'
    ports:
      - '5000:80'
    networks:
      - empoweridnet
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://EmpowerID-apigateway:80/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart:
      on-failure
    depends_on:
      - postgres
      - empowerid-identityserver

  # Services

  empowerid-users:
    image: empowerid-users
    container_name: empowerid-users
    build:
      context: .
      dockerfile: src/Services/EmpowerID.UserManagement/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: '${ASPNETCORE_ENVIRONMENT:-Development}'
      ASPNETCORE_URLS: 'http://+:80'
    ports:
      - '8001:80'
    networks:
      - empoweridnet
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://EmpowerID-users:80/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart:
      on-failure
    depends_on:
      - postgres
      - empowerid-identityserver
      - empowerid-apigateway
      
  empowerid-posts:
    image: empowerid-posts
    container_name: empowerid-posts
    build:
      context: .
      dockerfile: src/Services/EmpowerID.Posts/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: '${ASPNETCORE_ENVIRONMENT:-Development}'
      ASPNETCORE_URLS: 'http://+:80'
    ports:
      - '8002:80'
    networks:
      - empoweridnet
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://EmpowerID-posts:80/health"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart:
      on-failure
    depends_on:
      - sql-server
      - empowerid-identityserver
      - empowerid-apigateway

networks:
  empoweridnet:
    driver: bridge

volumes:
  postgres:
  pgadmin:
